/*
 * PojoCreatePanel.java
 *
 * Created on 2007年8月3日, 上午10:24
 */
package com.bca.toolkit.top.tools.orm;

import com.bca.toolkit.top.tools.orm.form.BcaTool_PojoFac_BcaHibernate;
import com.bca.toolkit.top.tools.orm.form.BcaTool_PojoFac_iRapid;
import com.bca.agent.dagent.fb.DatabaseObjectTreePane;
import com.bca.agent.dagent.fb.HdcSelectionDialog;
import com.bca.pub.tools.Wftool;
import com.bca.toolkit.app.BcaToolkit;
import java.awt.CardLayout;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author  pxz
 */
public class BcaTool_PojoCreatePanel extends javax.swing.JPanel {

    public final static com.bca.tools.log.Log log = com.bca.tools.log.LogFactory.getLog();
    final BcaToolkit app = BcaToolkit.getApp();
    public final PojoCreateModel model = new PojoCreateModel(this);
//    DropTarget dropTarget_table;
//    DropTarget dropTarget_tableSP;
    I_PojoFactoryForm factoryForm;

    /** Creates new form PojoCreatePanel */
    public BcaTool_PojoCreatePanel() {
        initComponents();
        wfinit();
    }

//    private int getIndexOnBox(JComboBox box, Object o) {
//        for (int i = box.getItemCount() - 1; i >= 0; i--) {
//            if (o.equals(box.getItemAt(i))) {
//                return i;
//            }
//        }
//        return -1;
//    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        selectDbButton = new javax.swing.JButton();
        createSourceButton = new javax.swing.JButton();
        pojoFactoryBox = new javax.swing.JComboBox();
        jSplitPane1 = new javax.swing.JSplitPane();
        dbviewContainer = new javax.swing.JPanel();
        pojoFactPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        selectDbButton.setText("选择库"); // NOI18N
        selectDbButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDbButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(selectDbButton);

        createSourceButton.setText("创建代码"); // NOI18N
        createSourceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createSourceButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(createSourceButton);

        pojoFactoryBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pojoFactoryBoxItemStateChanged(evt);
            }
        });
        jToolBar1.add(pojoFactoryBox);

        add(jToolBar1, java.awt.BorderLayout.NORTH);

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(3);

        dbviewContainer.setLayout(new java.awt.BorderLayout());
        jSplitPane1.setLeftComponent(dbviewContainer);

        pojoFactPanel.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(pojoFactPanel);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void createSourceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createSourceButtonActionPerformed
        model.createSource();
    }//GEN-LAST:event_createSourceButtonActionPerformed

    private void selectDbButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDbButtonActionPerformed
        HdcSelectionDialog dlg = new HdcSelectionDialog(app.getMainFrame(), false);
        dlg.setBounds(app.getCenterBounds(400, 300));
        dlg.setTitle("ETL:数据源选择");
//        dlg.setRadioGroup(this.radioGroup);
        dlg.wfinit();
        dlg.setVisible(true);
        if (dlg.getSelectedAliases().isEmpty()) {
            return;
        }
        dbviewContainer.removeAll();
        model.alias = dlg.getSelectedAliases().get(0);
        final DatabaseObjectTreePane dbTreePanel = new DatabaseObjectTreePane();

        dbTreePanel.setAlias(model.alias);
        dbviewContainer.add(dbTreePanel, java.awt.BorderLayout.CENTER);
        dbTreePanel.wfinit();
        dbTreePanel.setVisibleChildren(true, true, false, false);

        Wftool.invokeLater(new Runnable() {

            @Override
            public void run() {
                dbTreePanel.refreshMeta();
            }
        });


        SwingUtilities.updateComponentTreeUI(dbviewContainer);
    }//GEN-LAST:event_selectDbButtonActionPerformed

    private void pojoFactoryBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pojoFactoryBoxItemStateChanged
        try {
//            factoryForm = knownFactory.get((String) pojoFactoryBox.getSelectedItem());
//            if (factoryForm == null) {
//                pojoFactPanel.removeAll();
//                factoryForm = null;
//                return;
//            }
//            Constructor cs = c.getConstructor(this.getClass());
//            factoryForm = (I_PojoFactoryForm) cs.newInstance(this);
//            pojoFactPanel.add((JComponent) factoryForm, java.awt.BorderLayout.CENTER);
            CardLayout cl = (CardLayout) pojoFactPanel.getLayout();
            cl.show(pojoFactPanel, (String) pojoFactoryBox.getSelectedItem());
            factoryForm = knownFactory.get((String) pojoFactoryBox.getSelectedItem());
        } catch (Exception ex) {
            log.error(com.bca.pub.tools.Toolfunc.getCallLocation(ex.getStackTrace()) + ":" + ex.getMessage(), ex);
        } finally {
//            SwingUtilities.updateComponentTreeUI(pojoFactPanel);
        }
    }//GEN-LAST:event_pojoFactoryBoxItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton createSourceButton;
    javax.swing.JPanel dbviewContainer;
    javax.swing.JSplitPane jSplitPane1;
    javax.swing.JToolBar jToolBar1;
    javax.swing.JPanel pojoFactPanel;
    javax.swing.JComboBox pojoFactoryBox;
    javax.swing.JButton selectDbButton;
    // End of variables declaration//GEN-END:variables
    final Map<String, I_PojoFactoryForm> knownFactory = new LinkedHashMap<String, I_PojoFactoryForm>();

    private void wfinit() {
        knownFactory.put("iRapid", new BcaTool_PojoFac_iRapid(this));
        knownFactory.put("BcaHibernate", new BcaTool_PojoFac_BcaHibernate(this));
//        knownFactory.put("QueryBuilder", new BcaTool_QueryBuilder(this));
        //
        pojoFactoryBox.addItem("");
        //
        //        CardLayout cl = (CardLayout) pojoFactPanel.getLayout();
        //
        pojoFactPanel.add(new JPanel(), "");
        for (String s : knownFactory.keySet()) {
            this.pojoFactoryBox.addItem(s);
            pojoFactPanel.add((JComponent) knownFactory.get(s), s);
        }
        // 
        pojoFactoryBox.setSelectedIndex(2);
        //
//        if (BcaToolkitFcSwitch.codeFatory) {
////            showCard("QueryBuilder");
//            pojoFactoryBox.setSelectedItem("QueryBuilder");
//            selectDbButtonActionPerformed(null);
//        }
    }

    public void reloadORM() {
        if (factoryForm != null) {
            factoryForm.reloadORM();
        }
    }

    public I_PojoSourceCreator getSourceCreator() {
        //  new PojoSourceCreator_4_Hibernate(sourceUnits);
        I_PojoSourceCreator c = factoryForm == null ? null : factoryForm.getSourceCreator();

        return c;
    }

    private void showCard(String card) {
        CardLayout cl = (CardLayout) pojoFactPanel.getLayout();
        cl.show(pojoFactPanel, card);
    }
}
