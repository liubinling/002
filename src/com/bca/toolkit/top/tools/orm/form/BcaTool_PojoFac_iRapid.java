/*
 * PojoCreatePanel.java
 *
 * Created on 2007年8月3日, 上午10:24
 */
package com.bca.toolkit.top.tools.orm.form;

import com.bca.db.meta.I_WfColumn;
import com.bca.pub.tools.Toolfunc;
import com.bca.pub.tools.Uitool;
import com.bca.studio.tools.BstudioGlobal;
import com.bca.toolkit.app.BcaToolkit;
import com.bca.toolkit.top.tools.orm.BcaTool_PojoCreatePanel;
import com.bca.toolkit.top.tools.orm.I_PojoFactoryForm;
import com.bca.toolkit.top.tools.orm.I_PojoSourceCreator;
import com.bca.toolkit.top.tools.orm.PojoCreateModel;
import com.bca.toolkit.top.tools.orm.PojoField;
import com.bca.toolkit.top.tools.orm.creator.PojoSourceCreator_4_iRapid;
import java.awt.dnd.DropTarget;
import javax.swing.JComboBox;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author  pxz
 */
public class BcaTool_PojoFac_iRapid extends javax.swing.JPanel implements I_PojoFactoryForm, ListSelectionListener {

    public final static com.bca.tools.log.Log log = com.bca.tools.log.LogFactory.getLog();
    final BcaToolkit app = BcaToolkit.getApp();
    final PojoCreateModel model;  // = new PojoCreateModel(this);
    DropTarget dropTarget_table;
    DropTarget dropTarget_tableSP;
    final BcaTool_PojoCreatePanel parentPanel;

    /** Creates new form PojoCreatePanel */
    public BcaTool_PojoFac_iRapid(BcaTool_PojoCreatePanel pojoCreatePanel) {
        initComponents();
        //
        this.parentPanel = pojoCreatePanel;
        model = this.parentPanel.model;
        wfinit();
    }

    private int getIndexOnBox(JComboBox box, Object o) {
        for (int i = box.getItemCount() - 1; i >= 0; i--) {
            if (o.equals(box.getItemAt(i))) {
                return i;
            }
        }
        return -1;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        classNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        aliasField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tableNameField = new javax.swing.JTextField();
        savePojoAttrButton = new javax.swing.JButton();
        packageNameBox = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        colNameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        datatypeField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        flagsField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        varnameField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        scopeBox = new javax.swing.JComboBox();
        vartypeBox = new javax.swing.JComboBox();
        toStringCheck = new javax.swing.JCheckBox();
        equalsCheck = new javax.swing.JCheckBox();
        hashCheck = new javax.swing.JCheckBox();
        saveFieldAttrButton = new javax.swing.JButton();
        clearMapButton = new javax.swing.JButton();
        titleField = new javax.swing.JTextField();
        tableSP = new javax.swing.JScrollPane();
        mapTable = new org.jdesktop.swingx.JXTable();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setText("类名:");

        jLabel2.setText("包名:");

        jLabel9.setText("连接:");

        aliasField.setEditable(false);

        jLabel10.setText("表名:");

        tableNameField.setEditable(false);

        savePojoAttrButton.setText("保存");
        savePojoAttrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePojoAttrButtonActionPerformed(evt);
            }
        });

        packageNameBox.setEditable(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(packageNameBox, 0, 255, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aliasField, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tableNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savePojoAttrButton)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(aliasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tableNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(classNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(packageNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(savePojoAttrButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        tabPane.addTab("持久类属性", jPanel3);

        jLabel3.setText("列名:");

        colNameField.setEditable(false);

        jLabel4.setText("数据类型:");

        datatypeField.setEditable(false);

        jLabel5.setText("标志:");

        flagsField.setEditable(false);

        jLabel6.setText("变量名:");

        jLabel7.setText("变量类型:");

        jLabel8.setText("作用域:");

        scopeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "private", "protected", "public" }));

        vartypeBox.setEditable(true);
        vartypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "java.lang.String", "int", "long", "float", "boolean", "java.sql.Timestamp" }));

        toStringCheck.setText("toString");
        toStringCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        toStringCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));

        equalsCheck.setText("equals");
        equalsCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        equalsCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));

        hashCheck.setText("hashCode");
        hashCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        hashCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));

        saveFieldAttrButton.setText("保存");
        saveFieldAttrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFieldAttrButtonActionPerformed(evt);
            }
        });

        clearMapButton.setText("清除映射");
        clearMapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMapButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(colNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(varnameField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datatypeField, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vartypeBox, 0, 155, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(flagsField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scopeBox, 0, 144, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(toStringCheck)
                        .addGap(16, 16, 16)
                        .addComponent(equalsCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hashCheck)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveFieldAttrButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearMapButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(colNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(datatypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(flagsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(saveFieldAttrButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(varnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(scopeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vartypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearMapButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toStringCheck)
                    .addComponent(equalsCheck)
                    .addComponent(hashCheck))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tabPane.addTab("字段映射属性", jPanel4);

        add(tabPane, java.awt.BorderLayout.SOUTH);

        titleField.setBackground(new java.awt.Color(0, 51, 255));
        titleField.setEditable(false);
        titleField.setForeground(new java.awt.Color(255, 255, 0));
        titleField.setText("表xx的ORM (iRapid模版)"); // NOI18N
        add(titleField, java.awt.BorderLayout.NORTH);

        mapTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "字段名", "数据类型", "标志", "变量名", "变量类型", "作用域", "列说明(来自DB)", "toString", "equals", "hashCode"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mapTable.setSortable(false);
        tableSP.setViewportView(mapTable);

        add(tableSP, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void clearMapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMapButtonActionPerformed
        if (pojoField == null) {
            return;
        }
        pojoField.varName = "";
        pojoField.varType = "";
        pojoField.scope = "";
        pojoField.inToString = false;
        pojoField.inEquals = false;
        pojoField.inHashCode = false;

        this.loadPojoFieldUI(pojoField);
        this.saveFieldAttrButtonActionPerformed(null);
    }//GEN-LAST:event_clearMapButtonActionPerformed

    private void saveFieldAttrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFieldAttrButtonActionPerformed
        if (pojoField == null) {
            return;
        }
        pojoField.varName = varnameField.getText();
        pojoField.varType = Toolfunc.getPackedTypeBySimpleType((String) vartypeBox.getSelectedItem());
        pojoField.scope = (String) scopeBox.getSelectedItem();
        pojoField.inToString = toStringCheck.isSelected();
        pojoField.inEquals = equalsCheck.isSelected();
        pojoField.inHashCode = hashCheck.isSelected();

        javax.swing.table.DefaultTableModel tm = (javax.swing.table.DefaultTableModel) mapTable.getModel();
        int row = Uitool.locateRowByTableColumn(tm, pojoField.col.getSqlName(), 0);
        assert row >= 0;
        int col = 3;
        tm.setValueAt(pojoField.varName, row, col++);
        tm.setValueAt(pojoField.varType, row, col++);
        tm.setValueAt(pojoField.scope, row, col++);
//        tm.setValueAt(pojoField., row, col++);
        col++;   // skip remark ...
        tm.setValueAt(pojoField.inToString, row, col++);
        tm.setValueAt(pojoField.inEquals, row, col++);
        tm.setValueAt(pojoField.inHashCode, row, col++);
//                    new Object[] {col.getSqlName(), col.getSqlTypeNameWithLenInfo(), col.getFlags(), f.varName, f.varType, f.scope, f.inToString, f.inEquals, f.inHashCode});

    }//GEN-LAST:event_saveFieldAttrButtonActionPerformed

    private void savePojoAttrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePojoAttrButtonActionPerformed
        model.pojoAttr.packageName = packageNameBox.getSelectedItem().toString();
        model.pojoAttr.className = classNameField.getText();

        app.cfg.getDataWizConfig().addPojoPkg(model.pojoAttr.packageName);
        //          packageNameBox.getItemCount()
        int i = getIndexOnBox(packageNameBox, model.pojoAttr.packageName);
        if (i < 0) {
            packageNameBox.addItem(model.pojoAttr.packageName);
        }

        model.recentPackageName = model.pojoAttr.packageName;
    }//GEN-LAST:event_savePojoAttrButtonActionPerformed

    private void wfinit() {
//        DatabaseObjectTreePane dbTreePanel = new DatabaseObjectTreePane();
//        dbViewPanel.add(dbTreePanel, java.awt.BorderLayout.CENTER);
//        dbTreePanel.wfinit();
        // "字段名", "数据类型", "标志", "变量名", "变量类型", "作用域", "长度", "toString", "equals", "hashCode"
        Uitool.setTableColumnWidths(mapTable, new int[]{150, 120, 60, 120, 120, 120, 150, 40, 40, 40});
        Uitool.alternateRowHighlighter_onJXTable(mapTable);

        packageNameBox.addItem("");

        for (String pkg : app.cfg.getDataWizConfig().getPojoPackages()) {
            packageNameBox.addItem(pkg);
        }

        dropTarget_table = new DropTarget(mapTable, model);
        dropTarget_tableSP = new DropTarget(tableSP, model);


        mapTable.getSelectionModel().addListSelectionListener(this);
    }

    @Override
    public void reloadORM() {
        aliasField.setText(model.alias);
        tableNameField.setText(model.dbTable.getName());
        packageNameBox.setSelectedItem(model.pojoAttr.packageName);
        classNameField.setText(model.pojoAttr.className);

        javax.swing.table.DefaultTableModel tm = (javax.swing.table.DefaultTableModel) mapTable.getModel();
        tm.setRowCount(0);
        for (PojoField f : model.pojoFields.values()) {
            //  "字段名", "数据类型", "标志", "变量名", "变量类型", "作用域", "toString", "equals", "hashCode"
            I_WfColumn col = f.col;
            f.varType = Toolfunc.getPackedTypeBySimpleType(f.varType);
            tm.addRow(new Object[]{col.getSqlName(), col.getSqlTypeNameWithLenInfo(), col.getFlags(), f.varName, f.varType, f.scope, f.col.getColComment(), f.inToString, f.inEquals, f.inHashCode});
        }

        this.titleField.setText(String.format("表<%s.%s(%s)>的持久化映射 (iRapid模版)", model.alias, model.dbTable.getName(), model.dbTable.getTableComment().replace('r', ' ').replace('\n', ' ')));
        tabPane.setSelectedIndex(0);
    }
    String editingCol = "";

    private void editSelectedCol() {
        int row = mapTable.getSelectedRow();
        if (row == -1) {
            return;
        }
        String colName = (String) mapTable.getValueAt(row, 0);
        if (editingCol.equals(colName)) {
            return;
        }
        PojoField f = model.pojoFields.get(colName);
        loadPojoFieldUI(f);
        tabPane.setSelectedIndex(1);

        editingCol = colName;
    }
    PojoField pojoField;

    private void loadPojoFieldUI(PojoField f) {
        this.pojoField = f;
        colNameField.setText(f.col.getSqlName());
        datatypeField.setText(f.col.getSqlTypeNameWithLenInfo());
        flagsField.setText(f.col.getFlags());
        varnameField.setText(f.varName);

//        f.varType = Toolfunc.getPackedTypeBySimpleType(f.varType);

        vartypeBox.setSelectedItem(f.varType);
        scopeBox.setSelectedItem(f.scope);
        toStringCheck.setSelected(f.inToString);
        equalsCheck.setSelected(f.inEquals);
        hashCheck.setSelected(f.inHashCode);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JTextField aliasField;
    javax.swing.JTextField classNameField;
    javax.swing.JButton clearMapButton;
    javax.swing.JTextField colNameField;
    javax.swing.JTextField datatypeField;
    javax.swing.JCheckBox equalsCheck;
    javax.swing.JTextField flagsField;
    javax.swing.JCheckBox hashCheck;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel10;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel8;
    javax.swing.JLabel jLabel9;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel4;
    org.jdesktop.swingx.JXTable mapTable;
    javax.swing.JComboBox packageNameBox;
    javax.swing.JButton saveFieldAttrButton;
    javax.swing.JButton savePojoAttrButton;
    javax.swing.JComboBox scopeBox;
    javax.swing.JTabbedPane tabPane;
    javax.swing.JTextField tableNameField;
    javax.swing.JScrollPane tableSP;
    javax.swing.JTextField titleField;
    javax.swing.JCheckBox toStringCheck;
    javax.swing.JTextField varnameField;
    javax.swing.JComboBox vartypeBox;
    // End of variables declaration//GEN-END:variables
//    private void wfinit() {
//
//        Uitool.setTableColumnWidths(mapTable, new int[]{150, 120, 60, 120, 120, 120, 70, 70, 70});
//        Uitool.alternateRowHighlighter_onJXTable(mapTable);
//
//        packageNameBox.addItem("");
//
//        for (String pkg : app.cfg.getDataWizConfig().getPojoPackages()) {
//            packageNameBox.addItem(pkg);
//        }
//
//        dropTarget_table = new DropTarget(mapTable, model);
//        dropTarget_tableSP = new DropTarget(tableSP, model);
//    }
//
//    void reloadORM() {
//        aliasField.setText(model.alias);
//        tableNameField.setText(model.dbTable.getName());
//        packageNameBox.setSelectedItem(model.pojoAttr.packageName);
//        classNameField.setText(model.pojoAttr.className);
//
//        javax.swing.table.DefaultTableModel tm = (javax.swing.table.DefaultTableModel) mapTable.getModel();
//        tm.setRowCount(0);
//        for (PojoField f : model.pojoFields.values()) {
//            //  "字段名", "数据类型", "标志", "变量名", "变量类型", "作用域", "toString", "equals", "hashCode"
//            I_WfColumn col = f.col;
//            tm.addRow(new Object[]{col.getSqlName(), col.getSqlTypeNameWithLenInfo(), col.getFlags(), f.varName, f.varType, f.scope, f.inToString, f.inEquals, f.inHashCode});
//        }
//
//        this.titleField.setText(String.format("表<%s:%s>的持久化映射", model.alias, model.dbTable.getName()));
//        tabPane.setSelectedIndex(0);
//    }
//    String editingCol = "";
//
//    private void editSelectedCol() {
//        int row = mapTable.getSelectedRow();
//        if (row == -1) {
//            return;
//        }
//        String colName = (String) mapTable.getValueAt(row, 0);
//        if (editingCol.equals(colName)) {
//            return;
//        }
//        PojoField f = model.pojoFields.get(colName);
//        loadPojoFieldUI(f);
//        tabPane.setSelectedIndex(1);
//
//        editingCol = colName;
//    }
//    PojoField pojoField;
//
//    private void loadPojoFieldUI(PojoField f) {
//        this.pojoField = f;
//        colNameField.setText(f.col.getSqlName());
//        datatypeField.setText(f.col.getSqlTypeNameWithLenInfo());
//        flagsField.setText(f.col.getFlags());
//        varnameField.setText(f.varName);
//        vartypeBox.setSelectedItem(f.varType);
//        scopeBox.setSelectedItem(f.scope);
//        toStringCheck.setSelected(f.inToString);
//        equalsCheck.setSelected(f.inEquals);
//        hashCheck.setSelected(f.inHashCode);
//    }
//

    @Override
    public void valueChanged(ListSelectionEvent e) {
//        if (e.getSource() == this.mapTable.getColumnModel().getSelectionModel() && mapTable.getColumnSelectionAllowed()) {
//            int firstRow = e.getFirstIndex();
//            int lastRow = e.getLastIndex();
//            // 事件处理...
//        }
//        this.editingCol();
        editSelectedCol();
    }

    @Override
    public I_PojoSourceCreator getSourceCreator() {
         return new PojoSourceCreator_4_iRapid();
    }
}
