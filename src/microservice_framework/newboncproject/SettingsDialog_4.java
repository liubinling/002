/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package microservice_framework.newboncproject;

import microservice_framework.baseFrames.BaseDialog;
import microservice_framework.getInput.DataSource;
import microservice_framework.getInput.ProjModel;

import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.net.URL;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.JFrame;

/**
 *
 * @author ur
 */
public class SettingsDialog_4 extends BaseDialog {

    /**
     * @return the settingsDialog_3
     */
    public SettingsDialog_3 getSettingsDialog_3() {
        return settingsDialog_3;
    }

    /**
     * @param settingsDialog_3 the settingsDialog_3 to set
     */
    public void setSettingsDialog_3(SettingsDialog_3 settingsDialog_3) {
        this.settingsDialog_3 = settingsDialog_3;
    }
    private SettingsDialog_3 settingsDialog_3;
    private ProjModel model;
    public ProjModel getModel() {
		return model;
	}
	private DataSource dataSource;
    private HashMap<String, DataSource> otherSource;
    /**
     * Creates new form SettingsDialog_4
     */
    public SettingsDialog_4() {
        initComponents();
        wfinit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        upperPanel = new javax.swing.JPanel();
        topLabel1 = new javax.swing.JLabel();
        topLabel2 = new javax.swing.JLabel();
        topLabel2.setFont(new Font("����", Font.PLAIN, 12));
        topLabel3 = new javax.swing.JLabel();
        topLabel3.setFont(new Font("����", Font.PLAIN, 12));
        jSeparator1 = new javax.swing.JSeparator();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        finishButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        mainSourcePanel = new javax.swing.JPanel();
        SIP_TFD = new javax.swing.JTextField();
        mainURLLabel = new javax.swing.JLabel();
        mainURLLabel.setFont(new Font("����", Font.PLAIN, 12));
        mainTypeLabel = new javax.swing.JLabel();
        mainTypeLabel.setFont(new Font("����", Font.PLAIN, 12));
        mainAccountLabel = new javax.swing.JLabel();
        mainAccountLabel.setFont(new Font("����", Font.PLAIN, 12));
        SRemoteDir_TFD = new javax.swing.JTextField();
        upDownBox = new javax.swing.JCheckBox();
        SPsw_TFD = new javax.swing.JTextField();
        mainTypeLabel2 = new javax.swing.JLabel();
        mainTypeLabel2.setFont(new Font("����", Font.PLAIN, 12));
        SPort_TFD = new javax.swing.JTextField();
        mainTypeLabel3 = new javax.swing.JLabel();
        mainTypeLabel3.setFont(new Font("����", Font.PLAIN, 12));
        SUsername_TFD = new javax.swing.JTextField();
        SFTPBox = new javax.swing.JCheckBox();
        FTPBox = new javax.swing.JCheckBox();
        mainTypeLabel1 = new javax.swing.JLabel();
        mainTypeLabel1.setFont(new Font("����", Font.PLAIN, 12));
        FIP_TFD = new javax.swing.JTextField();
        mainTypeLabel4 = new javax.swing.JLabel();
        mainTypeLabel4.setFont(new Font("����", Font.PLAIN, 12));
        FPort_TFD = new javax.swing.JTextField();
        mainTypeLabel5 = new javax.swing.JLabel();
        mainTypeLabel5.setFont(new Font("����", Font.PLAIN, 12));
        FUsername_TFD = new javax.swing.JTextField();
        mainURLLabel1 = new javax.swing.JLabel();
        mainURLLabel1.setFont(new Font("����", Font.PLAIN, 12));
        FPsw_TFD = new javax.swing.JTextField();
        mainAccountLabel1 = new javax.swing.JLabel();
        mainAccountLabel1.setFont(new Font("����", Font.PLAIN, 12));
        FRemoteDir_TFD = new javax.swing.JTextField();
        APIJsonBox = new javax.swing.JCheckBox();
        APIJsonBox.setFont(new Font("����", Font.PLAIN, 12));
        paymentManageBox = new javax.swing.JCheckBox();
        paymentManageBox.setFont(new Font("����", Font.PLAIN, 12));
        payBillBox = new javax.swing.JCheckBox();
        payBillBox.setFont(new Font("����", Font.PLAIN, 12));
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        topLabel1.setFont(new java.awt.Font("����", 1, 12)); // NOI18N
        topLabel1.setText("MicroService Project");

        topLabel2.setText("ѡ����������������������Ϣ��");

        topLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/microservice_framework/images/open_file.png"))); // NOI18N

        javax.swing.GroupLayout upperPanelLayout = new javax.swing.GroupLayout(upperPanel);
        upperPanel.setLayout(upperPanelLayout);
        upperPanelLayout.setHorizontalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(upperPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(topLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        upperPanelLayout.setVerticalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addGroup(upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(upperPanelLayout.createSequentialGroup()
                        .addComponent(topLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(topLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(upperPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(topLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        backButton.setText("< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next >");
        nextButton.setEnabled(false);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        finishButton.setText("Finish");
        finishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        mainSourcePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)), "���"));

        SIP_TFD.setEnabled(false);
        SIP_TFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIP_TFDActionPerformed(evt);
            }
        });

        mainURLLabel.setText("SFTP.Password:");

        mainTypeLabel.setText("SFTP.IP:");

        mainAccountLabel.setText("SFTP.RemoteDir:");

        SRemoteDir_TFD.setEnabled(false);

        upDownBox.setText("�ļ��ϴ�����");
        upDownBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                upDownBoxStateChanged(evt);
            }
        });
        upDownBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upDownBoxActionPerformed(evt);
            }
        });

        SPsw_TFD.setEnabled(false);
        SPsw_TFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPsw_TFDActionPerformed(evt);
            }
        });

        mainTypeLabel2.setText("SFTP.Port:");

        SPort_TFD.setEnabled(false);
        SPort_TFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPort_TFDActionPerformed(evt);
            }
        });

        mainTypeLabel3.setText("SFTP.Username:");

        SUsername_TFD.setEnabled(false);
        SUsername_TFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUsername_TFDActionPerformed(evt);
            }
        });

        SFTPBox.setText("SFTPЭ��");
        SFTPBox.setEnabled(false);
        SFTPBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SFTPBoxStateChanged(evt);
            }
        });
        SFTPBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFTPBoxActionPerformed(evt);
            }
        });

        FTPBox.setText("FTPЭ��");
        FTPBox.setEnabled(false);
        FTPBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                FTPBoxStateChanged(evt);
            }
        });
        FTPBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FTPBoxActionPerformed(evt);
            }
        });

        mainTypeLabel1.setText("FTP.IP:");

        FIP_TFD.setEnabled(false);
        FIP_TFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FIP_TFDActionPerformed(evt);
            }
        });

        mainTypeLabel4.setText("FTP.Port:");

        FPort_TFD.setEnabled(false);
        FPort_TFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FPort_TFDActionPerformed(evt);
            }
        });

        mainTypeLabel5.setText("FTP.Username:");

        FUsername_TFD.setEnabled(false);
        FUsername_TFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FUsername_TFDActionPerformed(evt);
            }
        });

        mainURLLabel1.setText("FTP.Password:");

        FPsw_TFD.setEnabled(false);
        FPsw_TFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FPsw_TFDActionPerformed(evt);
            }
        });

        mainAccountLabel1.setText("FTP.RemoteDir:");

        FRemoteDir_TFD.setEnabled(false);

        APIJsonBox.setText("API Json���");
        APIJsonBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APIJsonBoxActionPerformed(evt);
            }
        });

        paymentManageBox.setText("���ڹ������");
        paymentManageBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentManageBoxActionPerformed(evt);
            }
        });

        payBillBox.setText("���ڹ������");
        payBillBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBillBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainSourcePanelLayout = new javax.swing.GroupLayout(mainSourcePanel);
        mainSourcePanel.setLayout(mainSourcePanelLayout);
        mainSourcePanelLayout.setHorizontalGroup(
            mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainSourcePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainSourcePanelLayout.createSequentialGroup()
                        .addComponent(SFTPBox)
                        .addGap(430, 430, 430))
                    .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainSourcePanelLayout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(mainSourcePanelLayout.createSequentialGroup()
                                    .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mainTypeLabel2)
                                        .addComponent(mainURLLabel)
                                        .addComponent(mainTypeLabel3)
                                        .addComponent(mainTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(46, 46, 46))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainSourcePanelLayout.createSequentialGroup()
                                    .addComponent(mainAccountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)))
                            .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(SPort_TFD, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(SIP_TFD, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(mainSourcePanelLayout.createSequentialGroup()
                                    .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(SRemoteDir_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(SUsername_TFD, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SPsw_TFD)))
                                    .addGap(3, 3, 3))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainSourcePanelLayout.createSequentialGroup()
                            .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(FIP_TFD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainSourcePanelLayout.createSequentialGroup()
                                    .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(mainSourcePanelLayout.createSequentialGroup()
                                                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(mainTypeLabel4)
                                                    .addComponent(mainTypeLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(mainTypeLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                                                .addGap(46, 46, 46))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainSourcePanelLayout.createSequentialGroup()
                                                .addComponent(mainURLLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(mainSourcePanelLayout.createSequentialGroup()
                                            .addComponent(mainAccountLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(35, 35, 35)))
                                    .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(FRemoteDir_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(FPsw_TFD, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(FUsername_TFD, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(FPort_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGap(27, 27, 27))
                        .addGroup(mainSourcePanelLayout.createSequentialGroup()
                            .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(mainSourcePanelLayout.createSequentialGroup()
                                    .addGap(16, 16, 16)
                                    .addComponent(paymentManageBox))
                                .addComponent(FTPBox))
                            .addGap(0, 0, Short.MAX_VALUE)))))
            .addGroup(mainSourcePanelLayout.createSequentialGroup()
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainSourcePanelLayout.createSequentialGroup()
                        .addComponent(upDownBox)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(APIJsonBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(payBillBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainSourcePanelLayout.setVerticalGroup(
            mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainSourcePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(upDownBox)
                .addGap(9, 9, 9)
                .addComponent(SFTPBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SIP_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SPort_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainTypeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainSourcePanelLayout.createSequentialGroup()
                        .addComponent(mainTypeLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainURLLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainAccountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainSourcePanelLayout.createSequentialGroup()
                        .addComponent(SUsername_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SPsw_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SRemoteDir_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FTPBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FIP_TFD)
                    .addComponent(mainTypeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainSourcePanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(FPort_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainSourcePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainTypeLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FUsername_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainTypeLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainURLLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FPsw_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainSourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainAccountLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FRemoteDir_TFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(APIJsonBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(payBillBox)
                .addGap(56, 56, 56)
                .addComponent(paymentManageBox)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(upperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(mainSourcePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(555, 555, 555)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextButton)
                        .addGap(42, 42, 42)
                        .addComponent(finishButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(upperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainSourcePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nextButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(finishButton)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //������ذ�ť��������һҳ��
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        setVisible(false);
        if(settingsDialog_3!=null) {
            settingsDialog_3.setLocation(getLocation());
            settingsDialog_3.setVisible(true);
        }
    }//GEN-LAST:event_backButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_nextButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void SIP_TFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIP_TFDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SIP_TFDActionPerformed

    private void upDownBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_upDownBoxStateChanged
        SFTPBox.setEnabled(upDownBox.isSelected());
        FTPBox.setEnabled(upDownBox.isSelected());
    }//GEN-LAST:event_upDownBoxStateChanged

    private void SPsw_TFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPsw_TFDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SPsw_TFDActionPerformed

    private void SPort_TFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPort_TFDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SPort_TFDActionPerformed

    private void SUsername_TFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUsername_TFDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SUsername_TFDActionPerformed

    private void SFTPBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SFTPBoxStateChanged
        boolean f=SFTPBox.isSelected();
        getSIP_TFD().setEnabled(f);
        SPort_TFD.setEnabled(f);
        SUsername_TFD.setEnabled(f);
        SPsw_TFD.setEnabled(f);
        SRemoteDir_TFD.setEnabled(f);
        finishButton.setEnabled(!(SFTPBox.isSelected()||FTPBox.isSelected()));
        checkEssentialItems();
        
    }//GEN-LAST:event_SFTPBoxStateChanged

    private void SFTPBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFTPBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SFTPBoxActionPerformed

    private void FTPBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_FTPBoxStateChanged
        boolean f=FTPBox.isSelected();
        FIP_TFD.setEnabled(f);
        FPort_TFD.setEnabled(f);
        FUsername_TFD.setEnabled(f);
        FPsw_TFD.setEnabled(f);
        FRemoteDir_TFD.setEnabled(f);
        finishButton.setEnabled(!(SFTPBox.isSelected()||FTPBox.isSelected()));
        checkEssentialItems();
    }//GEN-LAST:event_FTPBoxStateChanged

    private void FTPBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FTPBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FTPBoxActionPerformed

    private void FIP_TFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FIP_TFDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FIP_TFDActionPerformed

    private void FPort_TFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FPort_TFDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FPort_TFDActionPerformed

    private void FUsername_TFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FUsername_TFDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FUsername_TFDActionPerformed

    private void FPsw_TFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FPsw_TFDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FPsw_TFDActionPerformed

    private void APIJsonBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APIJsonBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_APIJsonBoxActionPerformed

    private void paymentManageBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentManageBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentManageBoxActionPerformed

    private void payBillBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBillBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payBillBoxActionPerformed

    private void upDownBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upDownBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_upDownBoxActionPerformed

    private void finishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishButtonActionPerformed
        saveInputInfo();   //�����û����������
    }//GEN-LAST:event_finishButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsDialog_4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsDialog_4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsDialog_4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsDialog_4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsDialog_4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox APIJsonBox;
    private javax.swing.JTextField FIP_TFD;
    private javax.swing.JTextField FPort_TFD;
    private javax.swing.JTextField FPsw_TFD;
    private javax.swing.JTextField FRemoteDir_TFD;
    private javax.swing.JCheckBox FTPBox;
    private javax.swing.JTextField FUsername_TFD;
    private javax.swing.JCheckBox SFTPBox;
    private javax.swing.JTextField SIP_TFD;
    private javax.swing.JTextField SPort_TFD;
    private javax.swing.JTextField SPsw_TFD;
    private javax.swing.JTextField SRemoteDir_TFD;
    private javax.swing.JTextField SUsername_TFD;
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton finishButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel mainAccountLabel;
    private javax.swing.JLabel mainAccountLabel1;
    private javax.swing.JPanel mainSourcePanel;
    private javax.swing.JLabel mainTypeLabel;
    private javax.swing.JLabel mainTypeLabel1;
    private javax.swing.JLabel mainTypeLabel2;
    private javax.swing.JLabel mainTypeLabel3;
    private javax.swing.JLabel mainTypeLabel4;
    private javax.swing.JLabel mainTypeLabel5;
    private javax.swing.JLabel mainURLLabel;
    private javax.swing.JLabel mainURLLabel1;
    private javax.swing.JButton nextButton;
    private javax.swing.JCheckBox payBillBox;
    private javax.swing.JCheckBox paymentManageBox;
    private javax.swing.JLabel topLabel1;
    private javax.swing.JLabel topLabel2;
    private javax.swing.JLabel topLabel3;
    private javax.swing.JCheckBox upDownBox;
    private javax.swing.JPanel upperPanel;
    // End of variables declaration//GEN-END:variables
    //У������ĺϷ���
    private void checkEssentialItems() {
        //У��SFTPЭ��
        if(SFTPBox.isSelected()){
            if(isTFDEmpty(getSIP_TFD())){
                setIconForWrong();
                topLabel2.setText("��������Ч��SFTP.IP");
                finishButton.setEnabled(false);
                return;
            }else if(isTFDEmpty(SPort_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��SFTP.Port");
                finishButton.setEnabled(false);
                return;
            }else if(isTFDEmpty(SUsername_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��SFTP.Username");
                finishButton.setEnabled(false);
                return;
            }else if(isTFDEmpty(SPsw_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��SFTP.Password");
                finishButton.setEnabled(false);
                return;
            }else if(isTFDEmpty(SRemoteDir_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��SFTP.RemoteDir");
                finishButton.setEnabled(false);
                return;
            }
        }
        //SFTPЭ��У�����
        //FTPЭ��У��
        if(FTPBox.isSelected()){
            if(isTFDEmpty(FIP_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��FTP.IP");
                finishButton.setEnabled(false);
                return;
            }else if(isTFDEmpty(FPort_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��FTP.Port");
                finishButton.setEnabled(false);
                return;
            }else if(isTFDEmpty(FUsername_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��FTP.Username");
                finishButton.setEnabled(false);
                return;
            }else if(isTFDEmpty(FPsw_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��FTP.Password");
                finishButton.setEnabled(false);
                return;
            }else if(isTFDEmpty(FRemoteDir_TFD)){
                setIconForWrong();
                topLabel2.setText("��������Ч��FTP.RemoteDir");
                finishButton.setEnabled(false);
                return;
            }
        }
        //FTPЭ��У�����
        topLabel2.setIcon(null);
        topLabel2.setText("ѡ����������������������Ϣ��");
        finishButton.setEnabled(true);
    }

    private void wfinit() {
        changeSwingLooksAndFeels();  //����ҳ����ͳߴ�
        setSize((int) (getSCREENWIDTH()/3), (int) (getSCREENHEIGHT()/1.18));
        JTextField[] tf={FIP_TFD, FRemoteDir_TFD, FPsw_TFD, FUsername_TFD, FPort_TFD, getSIP_TFD(), SRemoteDir_TFD, SPsw_TFD, SUsername_TFD, SPort_TFD};
        for(JTextField t:tf){
            t.addFocusListener(new FocusListener(){
                @Override
                public void focusGained(FocusEvent e) {
                    checkEssentialItems();
                }

                @Override
                public void focusLost(FocusEvent e) {
                    checkEssentialItems();
                } 
            });
            t.getDocument().addDocumentListener(new DocumentListener(){
                @Override
                public void insertUpdate(DocumentEvent e) {
                    checkEssentialItems();
                }

                @Override
                public void removeUpdate(DocumentEvent e) {
                    checkEssentialItems();
                }

                @Override
                public void changedUpdate(DocumentEvent e) {
                    checkEssentialItems();
                }
                
            });
        }
    }
    /**
     * Ϊ��ʾ��ǩ���ô���ͼ��
     */
    public void setIconForWrong(){
                URL url=this.getClass().getResource("/microservice_framework/images/wrong_16px_.png");
                Image image = Toolkit.getDefaultToolkit().getImage(url);
                topLabel2.setIcon(new ImageIcon(image));
    }
    /*
    *У���ı����Ƿ�Ϊ��
    */
    private boolean isTFDEmpty(JTextField t){
        return t.getText()==null||t.getText().equals("");
    }
    /*
    * �����û����������
    */
    private void saveInputInfo() {
        model=new ProjModel();
        dataSource=new DataSource();
        otherSource=new HashMap<String, DataSource>();
        //��ʼ��ȡ��һҳ����
        SettingsDialog_1 s1=settingsDialog_3.getSettingsDialog_2().getSettingsDialog_1();
        SettingsDialog_2 s2=settingsDialog_3.getSettingsDialog_2();
        SettingsDialog_3 s3=settingsDialog_3;
        
        model.setProjectName(s1.getProjectNameTFD().getText());  //��Ŀ��
        model.setGroupId(s1.getGroupIdTFD().getText());             //��Id
        model.setArtifactId(s1.getArtifactIdTFD().getText());       //Artifact Id
        model.setProjectVersion(s1.getVersionTFD().getText());      //��Ŀ�汾��
        model.setJdkVersion((String)(s1.getJdkVersionBox().getSelectedItem()));  //jdk�汾��
        model.setFrameVersion((String)(s1.getFrameworkVersionBox().getSelectedItem()));  //΢�����ܰ汾��
        model.setPortNumber(s1.getPortNumberTFD().getText());   //�˿ں�
        model.setSavePath(s1.getProLocationTFD().getText());    //��Ŀ����·��
        model.setDepartment(s1.getDepartmentTFD().getText());   //����
        model.setProjTeam(s1.getProGroupTFD().getText());       //��Ŀ��
        model.setUserMail(s1.getEmailTFD().getText());          //����
        //��һҳ���ݻ�ȡ����
        //��ʼ��ȡ�ڶ�ҳ����
        dataSource.setDataType((String)(s2.getMainTypeBox().getSelectedItem()));    //������Դ��������
        dataSource.setUrl(s2.getMainURLTFD().getText());                            //������ԴURL
        dataSource.setUsername(s2.getMainAccountTFD().getText());                   //������Դ�˻�
        dataSource.setPassword(s2.getMainPswTFD().getText());                       //������Դ����
        model.setMainDataSource(dataSource);                                        //��������Դ����model
        HashMap<String, DataSource> temp=s2.obtainOtherSource();
        if(!(temp==null))
            model.setMultiDataSource(temp);                           //����������Դ����model
        //�ڶ�ҳ���ݻ�ȡ����
        //��ʼ��ȡ����ҳ����
        if(s3.getFrameBox().isSelected()){
            //ǰ�˿������
            model.setFrontFrame(true);
            model.setFrontFrameName((String)(s3.getFrontVersionCBox().getSelectedItem()));  //ǰ�˿�ܰ汾��
        }
        if(s3.getSecurityBox().isSelected()){
            //���ﶼ���Ż���ȫ���ֵ�����
            model.setPortalSecurity(true);
            model.setPsServiceName(s3.getServerNameTFD().getText());                        //�Ż���ȫ������
            model.setPsCasServiceUrlPrefix(s3.getUrlPrefixTFD().getText());                 //URLǰ׺
            model.setPsCasServerLoginUrl(s3.getLoginURLTFD().getText());                    //��¼URL
            model.setPsDefaultPage(s3.getDefaultPageTFD().getText());                       //Ĭ��ҳ
            model.setPsSecurityServiceURL(s3.getServiceURLTFD().getText());                 //����URL
        }
        if(s3.getCacheBox().isSelected()){
            //�����������
            model.setCacheService(true);                                                    
            model.setCacheServiceUrl(s3.getCacheURLTFD().getText());                        //����URL
            model.setCacheVersion((String)(s3.getCacheVersionCBox().getSelectedItem()));    //����汾��
        }
        model.setSwagger(s3.getSwaggerBox().isSelected());                                  //Swagger���
        model.setIsUnitTest(s3.getUnitTestTFD().isSelected());                              //��Ԫ�������
        model.setDeploymentWay(s3.getDeploymentWayBox().isSelected());                      //Docker�������
        if(s3.getMserviceManage().isSelected()){
            model.setIsMServiceManage(true);                                                //΢����������
            if(s3.getMserviceRD().isSelected()){
                model.setIsMServiceRD(true);                                                //΢����ע���뷢�֣�������΢��������У�
                model.setMserviceURL(s3.getVisiteAddressTFD1().getText());                  //΢������ʵ�ַ
                model.setMserviceR_URL(s3.getVisiteAddressTFD2().getText());                //΢����ע�����ķ��ʵ�ַ
            }
        }
        //����ҳ���ݻ�ȡ����
        
        //��ʼ��ȡ����ҳ����ҳ������
        if(upDownBox.isSelected()){
            model.setFileUpDownLoad(true);                                                  //�ļ��ϴ��������
            if(SFTPBox.isSelected()){
                model.setIsSftp(true);
                model.setSftpIp(SIP_TFD.getText());
                model.setSftpPassword(SPsw_TFD.getText());
                model.setSftpPort(SPort_TFD.getText());
                model.setSftpRemotedir(SRemoteDir_TFD.getText());
                model.setSftpUsername(SUsername_TFD.getText());
            }
            if(FTPBox.isSelected()){
                model.setIsFtp(true);
                model.setFtpIp(FIP_TFD.getText());
                model.setSftpPassword(FPsw_TFD.getText());
                model.setSftpPort(FPort_TFD.getText());
                model.setSftpRemotedir(FRemoteDir_TFD.getText());
                model.setSftpUsername(FUsername_TFD.getText());
            }
        }
        model.setApijson(APIJsonBox.isSelected());        //API Json���
        model.setPaymantManage(payBillBox.isSelected());  //���ڹ������
        //����ҳ���ݻ�ȡ����
       
        setVisible(false);
    }

    /**
     * @return the SIP_TFD
     */
    public javax.swing.JTextField getSIP_TFD() {
        return SIP_TFD;
    }

    /**
     * @param SIP_TFD the SIP_TFD to set
     */
    public void setSIP_TFD(javax.swing.JTextField SIP_TFD) {
        this.SIP_TFD = SIP_TFD;
    }
}
