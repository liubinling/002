/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * QbTablePopDialog.java
 *
 * Created on 2010-11-8, 23:00:43
 */
package com.bca.toolkit.top.tools.sql.impl.sh;

import com.bca.toolkit.top.tools.sql.impl.gx.*;
import com.bca.db.meta.I_WfColumn;
import com.bca.templ.pub.AbstractApp;
import com.bca.toolkit.top.tools.sql.SqlCreateModel;
import com.bca.toolkit.top.tools.sql.qb.QbJTable;
import com.bca.toolkit.top.tools.sql.qb.I_ColBatchDlg;

/**
 *
 * @author pxz
 */
public class QbTablePopDialog_ShouHen extends javax.swing.JDialog implements I_ColBatchDlg {

    private QbJTable qbJTable;

    /** Creates new form QbTablePopDialog */
    public QbTablePopDialog_ShouHen() {
        super(AbstractApp.getMainFrameOnPossible(), false);
//        this.qbJTable = qbJTable;
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        openAllFieldsButton = new javax.swing.JButton();
        criteriaOpen = new javax.swing.JButton();
        criteriaMask = new javax.swing.JButton();
        listdevOpen = new javax.swing.JButton();
        listDevMask = new javax.swing.JButton();
        inputOpen = new javax.swing.JButton();
        inputMask = new javax.swing.JButton();
        expOpen = new javax.swing.JButton();
        expMask = new javax.swing.JButton();
        impMask = new javax.swing.JButton();
        impOpen = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        groupButton = new javax.swing.JButton();
        cancelGroupButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        orderButton = new javax.swing.JButton();
        cancelOrderButton = new javax.swing.JButton();
        delEStyleButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("列批量操作"); // NOI18N
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        openAllFieldsButton.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.openAllFieldsButton.text")); // NOI18N
        openAllFieldsButton.setName("openAllFieldsButton"); // NOI18N
        openAllFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openAllFieldsButtonActionPerformed(evt);
            }
        });

        criteriaOpen.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.criteriaOpen.text")); // NOI18N
        criteriaOpen.setName("criteriaOpen"); // NOI18N
        criteriaOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criteriaOpenActionPerformed(evt);
            }
        });

        criteriaMask.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.criteriaMask.text")); // NOI18N
        criteriaMask.setName("criteriaMask"); // NOI18N
        criteriaMask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criteriaMaskActionPerformed(evt);
            }
        });

        listdevOpen.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.listdevOpen.text")); // NOI18N
        listdevOpen.setName("listdevOpen"); // NOI18N
        listdevOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listdevOpenActionPerformed(evt);
            }
        });

        listDevMask.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.listDevMask.text")); // NOI18N
        listDevMask.setName("listDevMask"); // NOI18N
        listDevMask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listDevMaskActionPerformed(evt);
            }
        });

        inputOpen.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.inputOpen.text")); // NOI18N
        inputOpen.setName("inputOpen"); // NOI18N
        inputOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputOpenActionPerformed(evt);
            }
        });

        inputMask.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.inputMask.text")); // NOI18N
        inputMask.setName("inputMask"); // NOI18N
        inputMask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMaskActionPerformed(evt);
            }
        });

        expOpen.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.expOpen.text")); // NOI18N
        expOpen.setName("expOpen"); // NOI18N
        expOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expOpenActionPerformed(evt);
            }
        });

        expMask.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.expMask.text")); // NOI18N
        expMask.setName("expMask"); // NOI18N
        expMask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expMaskActionPerformed(evt);
            }
        });

        impMask.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.impMask.text")); // NOI18N
        impMask.setName("impMask"); // NOI18N
        impMask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impMaskActionPerformed(evt);
            }
        });

        impOpen.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.impOpen.text")); // NOI18N
        impOpen.setName("impOpen"); // NOI18N
        impOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impOpenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(criteriaOpen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(listdevOpen))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(criteriaMask)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(listDevMask)))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputMask)
                            .addComponent(inputOpen)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(expMask)
                            .addComponent(expOpen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(impMask)
                                .addGap(18, 18, 18)
                                .addComponent(openAllFieldsButton))
                            .addComponent(impOpen))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(criteriaOpen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listdevOpen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputOpen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(criteriaMask)
                    .addComponent(listDevMask)
                    .addComponent(inputMask))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(impOpen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(impMask)
                            .addComponent(openAllFieldsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(expOpen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(expMask)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("group by"));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        groupButton.setText("分组字段"); // NOI18N
        buttonGroup2.add(groupButton);
        groupButton.setEnabled(false);
        groupButton.setName("groupButton"); // NOI18N
        groupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupButtonActionPerformed(evt);
            }
        });
        jPanel2.add(groupButton);

        cancelGroupButton.setText("取消分组"); // NOI18N
        buttonGroup2.add(cancelGroupButton);
        cancelGroupButton.setEnabled(false);
        cancelGroupButton.setName("cancelGroupButton"); // NOI18N
        cancelGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelGroupButtonActionPerformed(evt);
            }
        });
        jPanel2.add(cancelGroupButton);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("order By"));
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        orderButton.setText("排序字段"); // NOI18N
        buttonGroup3.add(orderButton);
        orderButton.setEnabled(false);
        orderButton.setName("orderButton"); // NOI18N
        orderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonActionPerformed(evt);
            }
        });
        jPanel3.add(orderButton);

        cancelOrderButton.setText("取消排序"); // NOI18N
        buttonGroup3.add(cancelOrderButton);
        cancelOrderButton.setEnabled(false);
        cancelOrderButton.setName("cancelOrderButton"); // NOI18N
        cancelOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelOrderButtonActionPerformed(evt);
            }
        });
        jPanel3.add(cancelOrderButton);

        delEStyleButton.setText(org.openide.util.NbBundle.getMessage(QbTablePopDialog_ShouHen.class, "QbTablePopDialog_ShouHen.delEStyleButton.text")); // NOI18N
        delEStyleButton.setName("delEStyleButton"); // NOI18N
        delEStyleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delEStyleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delEStyleButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(delEStyleButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        getQbJTable().onPopDialogClosed();
    }//GEN-LAST:event_formWindowClosed

    private void orderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonActionPerformed
        getQbJTable().orderbySelectedFields(true);
    }//GEN-LAST:event_orderButtonActionPerformed

    private void cancelOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelOrderButtonActionPerformed
        getQbJTable().orderbySelectedFields(false);
    }//GEN-LAST:event_cancelOrderButtonActionPerformed

    private void groupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupButtonActionPerformed
        getQbJTable().groupbySelectedFields(true);
    }//GEN-LAST:event_groupButtonActionPerformed

    private void cancelGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelGroupButtonActionPerformed
        getQbJTable().groupbySelectedFields(false);
    }//GEN-LAST:event_cancelGroupButtonActionPerformed

private void openAllFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openAllFieldsButtonActionPerformed
    SqlCreateModel sm = qbJTable.getScene().getModel().getSqlModel();
    sm.removeAllFieldMasks();
    updateJTableUI();
}//GEN-LAST:event_openAllFieldsButtonActionPerformed

private void criteriaOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criteriaOpenActionPerformed
    setSelectedFieldsSW("criteria", true);
}//GEN-LAST:event_criteriaOpenActionPerformed

private void criteriaMaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criteriaMaskActionPerformed
    setSelectedFieldsSW("criteria", false);
}//GEN-LAST:event_criteriaMaskActionPerformed

private void listdevOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listdevOpenActionPerformed
    setSelectedFieldsSW("list", true);
}//GEN-LAST:event_listdevOpenActionPerformed

private void listDevMaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listDevMaskActionPerformed
    setSelectedFieldsSW("list", false);
}//GEN-LAST:event_listDevMaskActionPerformed

private void inputOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputOpenActionPerformed
    setSelectedFieldsSW("input", true);
}//GEN-LAST:event_inputOpenActionPerformed

private void inputMaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMaskActionPerformed
    setSelectedFieldsSW("input", false);
}//GEN-LAST:event_inputMaskActionPerformed

private void expOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expOpenActionPerformed
    setSelectedFieldsSW("exp", true);
}//GEN-LAST:event_expOpenActionPerformed

private void expMaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expMaskActionPerformed
    setSelectedFieldsSW("exp", false);
}//GEN-LAST:event_expMaskActionPerformed

private void impOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impOpenActionPerformed
    setSelectedFieldsSW("imp", true);
}//GEN-LAST:event_impOpenActionPerformed

private void impMaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impMaskActionPerformed
    setSelectedFieldsSW("imp", false);
}//GEN-LAST:event_impMaskActionPerformed

    private void delEStyleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delEStyleButtonActionPerformed
        SqlCreateModel sm = qbJTable.getScene().getModel().getSqlModel();
        for (int row : qbJTable.getSelectedRows()) {
            I_WfColumn col = (I_WfColumn) qbJTable.getModel().getValueAt(row, 0);
            if (col != null) {
                sm.removeUiStyle(col.getSqlName());
            }
        }
        qbJTable.refreshSqlPreview(true);
        updateJTableUI();
    }//GEN-LAST:event_delEStyleButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton cancelGroupButton;
    private javax.swing.JButton cancelOrderButton;
    private javax.swing.JButton criteriaMask;
    private javax.swing.JButton criteriaOpen;
    private javax.swing.JButton delEStyleButton;
    private javax.swing.JButton expMask;
    private javax.swing.JButton expOpen;
    private javax.swing.JButton groupButton;
    private javax.swing.JButton impMask;
    private javax.swing.JButton impOpen;
    private javax.swing.JButton inputMask;
    private javax.swing.JButton inputOpen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton listDevMask;
    private javax.swing.JButton listdevOpen;
    private javax.swing.JButton openAllFieldsButton;
    private javax.swing.JButton orderButton;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the qbJTable
     */
    public QbJTable getQbJTable() {
        return qbJTable;
    }

    /**
     * @param qbJTable the qbJTable to set
     */
    public void setQbJTable(QbJTable qbJTable) {
        this.qbJTable = qbJTable;
    }

    @Override
    public void wfinit(QbJTable jtable) {
        this.qbJTable = jtable;
        this.setTitle(String.format("表<%s>:列批量动作 (国信框架)", qbJTable.getModel().getTbean().getTableDetail().getName()));
    }

    private void updateJTableUI() {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                qbJTable.updateUI();
            }
        });
    }

    private void setSelectedFieldsSW(String grp, boolean sw) {
        SqlCreateModel sm = qbJTable.getScene().getModel().getSqlModel();
        for (int row : qbJTable.getSelectedRows()) {
            I_WfColumn col = (I_WfColumn) qbJTable.getModel().getValueAt(row, 0);
            if (col != null) {
                if (sw) {
                    sm.removeFieldMask(grp, col.getSqlName());
                } else {
                    sm.maskField(grp, col.getSqlName());
                }
            }
        }
        qbJTable.refreshSqlPreview(true);
        updateJTableUI();
    }
}
