/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bca.toolkit.top.tools.sql.qb;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTree;

/**
 *
 * @author ur
 */
public class RelVarFrame extends javax.swing.JFrame {
    private final String t_alias;     //表别名
    private final String var_name;    //当前字段名
    private JScrollPane treePanel;    //主面板
    private JPanel bottomPanel;       //底层面板
    private JButton bt_ok, bt_cancel;   //确定取消按钮
    private final Map<String, Map<String, String>> keyVar;   //储存当前表字段（主键）与其他表字段（外键）的映射关系
    private final Map<String, Map<String, String>> foreVar=null;  //储存当前表字段（外键）与其他表字段（主键）的映射关系
    private RelTree tree;

    /**
     * Creates new form RelVarFrame
     * @param t_alias
     * @param var_name
     * @param keyVar
     * @param foreVar
     */
    public RelVarFrame(String t_alias, String var_name, Map<String, Map<String, String>> keyVar) {
        this.t_alias=t_alias;
        this.var_name=var_name;
        this.keyVar=keyVar==null?new HashMap<String, Map<String, String>>():keyVar;
        initComponents();
        wfinit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelVarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelVarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelVarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelVarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
            }
        });
    }
/**
 * 初始化窗体
 */
    private void wfinit() {
        setLayout(new BorderLayout());
        setBounds(400, 200, 700, 400);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        StringBuilder title=new StringBuilder("当前表别名：");
        title=title.append(t_alias==null?"":t_alias).append("    字段名：").append(var_name==null?"":var_name);
        setTitle(title.toString());
        treePanel=new JScrollPane();
        add(new JScrollPane(treePanel), BorderLayout.CENTER);
        //setVisible(true);
        bottomPanel=new JPanel();
        bt_ok=new JButton("确定");
        bt_cancel=new JButton("取消");
        bottomPanel.add(bt_ok);
        bottomPanel.add(bt_cancel);
        bt_cancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
            }
        });
        bt_ok.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
              if(tree==null)
                  return;
               RelTreeNode node0=(RelTreeNode) tree.getModel().getRoot();
                Enumeration enu=node0.children();
                while(enu.hasMoreElements()){
                    RelTreeNode node1=(RelTreeNode) enu.nextElement();  //表示表别名的子节点
                    Enumeration enu2=node1.children();
                    while(enu2.hasMoreElements()){
                        RelTreeNode node2=(RelTreeNode) enu2.nextElement(); //表示字段名的叶子结点
                        if(node2.isSelected()){
                            Map<String, String> vars=keyVar.get(var_name)==null?new HashMap<String, String>():keyVar.get(var_name);
                            vars.put(node1.getValue(), node2.getValue());
                            keyVar.put(var_name, vars);
                        }
                    }
                }
                setVisible(false);
            }
        });
        add(bottomPanel, BorderLayout.SOUTH);
    }
    /**
     * 把一棵树加入到窗体中部的面板里
     * @param tree
     */
    public void showTree(JTree tree){
        this.tree=(RelTree) tree;
        treePanel.setViewportView(tree);
        repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
