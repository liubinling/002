/*
 * BcaTool_LocateClassPanel.java
 *
 * Created on 2007年8月10日, 下午3:28
 */
package com.bca.toolkit.top.tools.util;

import com.bca.api.local.WfProcessRegApi;
import com.bca.api.pub.Ret;
import com.bca.api.remote.I_WfRemote;
import com.bca.api.remote.SRDU;
import com.bca.pub.WfProcessBean;
import com.bca.pub.tools.Nettool;
import com.bca.pub.tools.Toolfunc;
import com.bca.pub.tools.Wftool;
import com.bca.toolkit.app.BcaToolkit;
import java.rmi.Naming;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author  pxz
 */
public class BcaTool_ClassLocaterPanel extends javax.swing.JPanel {

    final static com.bca.tools.log.Log log = com.bca.tools.log.LogFactory.getLog();

    /** Creates new form BcaTool_LocateClassPanel */
    public BcaTool_ClassLocaterPanel() {
        initComponents();

        wfinit();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        classNamesPane = new javax.swing.JEditorPane();
        locateButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        remoteProcessCombox = new javax.swing.JComboBox();

        jLabel1.setText("\u8bf7\u8f93\u5165\u7c7b\u540d(\u53ef\u4ee5\u8f93\u5165\u591a\u4e2a\u7c7b\u540d\uff0c\u56de\u8f66\u5206\u9694)");

        jScrollPane1.setViewportView(classNamesPane);

        locateButton.setText("\u5b9a\u4f4d");
        locateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locateButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("\u8bf7\u9009\u62e9\u670d\u52a1\u8fdb\u7a0b:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remoteProcessCombox, 0, 281, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addComponent(locateButton))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(remoteProcessCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locateButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    final String CR = "\r\n";

    private void locateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locateButtonActionPerformed
        if (processes == null) {
            return;
        }
        I_WfRemote wfr = null;
        String selectedProcess = (String) remoteProcessCombox.getSelectedItem();
        if (selectedProcess.equals("BcaToolkit本地")) {
        } else {
            for (WfProcessBean p : processes.values()) {
                if (selectedProcess.equals(String.format("%s(%s)", p.getProcessName(), p.getIp()))) {
                    String url = Nettool.getRmiUrl(p.getIp(), p.getRmiPort(), p.getRmiName());
                    try {
                        if (com.bca.pub.cfg.SGlobal.debugLogEnable) {
                            log.debug("Naming.lookup(%s)....", url);
                        }
                        Remote r = (Remote) Naming.lookup(url);
                        assert r != null;
                        if (r instanceof I_WfRemote) {
                            wfr = (I_WfRemote) r;
//                        SRDU rdu = wfr.getClassLocation(s);
//                        log.info("shutdown <%s> : %s", url, rdu.toString());
                        } else {
                            Wftool.messageDialogFmt("错误", JOptionPane.ERROR_MESSAGE, "进程<%s>不是<%s>的实例,不能定位类.", url, I_WfRemote.class.getName());
                            return;
                        }
                    } catch (Exception ex) {
                        log.error(ex);
                    }
                }
            }
        }
        String ss = this.classNamesPane.getText().trim();
        if (ss.length() == 0) {
            return;
        }
        StringBuffer sb = new StringBuffer();
        for (String s : ss.split(CR)) {
            String pos = null;
            if (wfr == null) {
                pos = Toolfunc.locateClassFile(s);
            } else {
                try {
                    SRDU rdu = wfr.getClassLocation(s);
                    if (rdu.isRetSuccess()) {
                        pos = (String) rdu.getRetObject();
                    }
                } catch (RemoteException ex) {
                    log.error(ex);
                }
            }
            if (pos != null && pos.length() != 0) {
                sb.append(String.format("类 <%s> 定位于 <%s>\n", s, pos));
            } else {
                sb.append(String.format("类 <%s> 未找到.\n", s));
            }
        }
        Wftool.messageDialog("信息", JOptionPane.INFORMATION_MESSAGE, sb.toString().replace("%", "%%"));
        return;

    }//GEN-LAST:event_locateButtonActionPerformed
    Map<Integer, WfProcessBean> processes = null;

    private void wfinit() {
//        remoteProcessCombox.removeAllItems();
//
        remoteProcessCombox.addItem("BcaToolkit本地");
//        InitTool_bstudio.validateInitialized();
        BcaToolkit app = BcaToolkit.getApp();
        app.checkWfBaseConnection(true);
        WfProcessRegApi baseApi = app.getWfBaseClientApi();
        if (baseApi == null) {
            Wftool.messageDialog(false, "与bca服务器连接未通。请检查服务器是否就绪。");
            return;
        }
        Ret ret = new Ret();
        processes = baseApi.getAllProcesses(ret);
        if (!ret.isRetSuccess()) {
            return;
        }
        for (WfProcessBean p : processes.values()) {
            remoteProcessCombox.addItem(String.format("%s(%s)", p.getProcessName(), p.getIp()));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JEditorPane classNamesPane;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JButton locateButton;
    javax.swing.JComboBox remoteProcessCombox;
    // End of variables declaration//GEN-END:variables
}
